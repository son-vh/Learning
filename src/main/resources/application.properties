server.port=8081

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-init-sql=SET TIME ZONE 'Asia/Ho_Chi_Minh'
spring.datasource.hikari.connection-timeout=15000
spring.datasource.hikari.leak-detection-threshold=20000
spring.datasource.hikari.max-lifetime=15000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.pool-name=learning
spring.datasource.hikari.idle-timeout=12000
spring.datasource.url = jdbc:postgresql://0.0.0.0:5432/demo
spring.datasource.username =admin
spring.datasource.password =admin



## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect



# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug



